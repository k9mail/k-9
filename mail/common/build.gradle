apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'

if (rootProject.testCoverage) {
    apply plugin: 'jacoco'
}

dependencies {
    implementation "org.apache.james:apache-mime4j-core:${versions.mime4j}"
    implementation "org.apache.james:apache-mime4j-dom:${versions.mime4j}"
    implementation "com.squareup.okio:okio:${versions.okio}"
    implementation "commons-io:commons-io:${versions.commonsIo}"
    implementation "androidx.annotation:annotation:${versions.androidxAnnotation}"
    implementation "com.jakewharton.timber:timber:${versions.timber}"
    implementation "org.koin:koin-android:${versions.koin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    testImplementation project(":mail:testing")
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "com.google.truth:truth:${versions.truth}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${versions.mockitoKotlin}"
}

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools

    defaultConfig {
        minSdkVersion buildConfig.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled rootProject.testCoverage
            buildConfigField "String", "GOOGLE_CLIENT_ID", "\"*********add debug credentials here***************.apps.googleusercontent.com\""
            buildConfigField "String", "GOOGLE_CLIENT_ID_PACKAGE_NAME", "\"com.fsck.k9.debug\""
        }

        release {
            buildConfigField "String", "GOOGLE_CLIENT_ID", "\"*********add release credentials here***************.apps.googleusercontent.com\""
            buildConfigField "String", "GOOGLE_CLIENT_ID_PACKAGE_NAME", "\"com.fsck.k9\""
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    kotlinOptions {
        jvmTarget = kotlinJvmVersion
    }
}
